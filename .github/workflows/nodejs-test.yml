name: Node.js Test

on:
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
        description: "Branch name"
        default: 'main'
      # <--------------- ESLint Setting ---------------> 
      eslint-enable:
        required: false
        type: boolean
        description: Enable ESLint
        default: false

      eslint-command:
        required: false
        type: string
        description: ESLint command
        default: npx eslint --config eslint.config.mjs '**/*.{js,ts,tsx}' || exit 1

      # <--------------- UNIT-TEST SETTINGS --------------> 
      unit-test-enable:
        required: false
        type: boolean
        description: "To disable the unit-tests job set to false"
        default: true

      unit-test-command:
        required: false
        type: string
        description: "Used to override the default command to run your unit tests e.g. yarn test:unit-ci"
        default: "npm run test:unit-ci"
      node-version:

        required: false
        type: string
        description: Node.js version
        default: '21'  # Default version of Node.js

    secrets:
      token:
        required: true 

jobs:
  # <---------------------- ESLINT ----------------------> 
  eslint:
    name: ESLint Check
    runs-on: ubuntu-22.04
    if: ${{ inputs.eslint-enable }}
    steps:
      # Check out the calling repository
      - name: Checkout Source
        uses: actions/checkout@v4
      
      # Checkout the workflows repo to access `eslint.config.mjs`
      - name: Checkout Workflows Repo
        uses: actions/checkout@v4
        with:
          # Checkout the `eslint` branch
          repository: Ridvan-bot/workflows
          ref: ${{ inputs.branch }}
          path: workflows-repo
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
      - name: Install Dependencies
      # Install dependencies and copy the eslint config file
        run: |
          # Install dependencies
          npm install
          if ! grep -q '"eslint"' package.json; then
            npm install eslint --save-dev
          fi
          if ! grep -q '"typescript-eslint"' package.json; then
            npm install typescript-eslint --save-dev
          fi
          if ! grep -q '"eslint-plugin-react"' package.json; then
            npm install eslint-plugin-react --save-dev
          fi
          if ! grep -q '"globals"' package.json; then
            npm install globals --save-dev
          fi
          if ! grep -q '"@eslint/js"' package.json; then
            npm install @eslint/js --save-dev
          fi
          if ! grep -q '"@typescript-eslint/parser"' package.json; then
            npm install @typescript-eslint/parser --save-dev
          fi

      - name: Verify Files and Directories
        run: |
            if [ ! -f eslint.config.mjs ]; then
              echo "eslint.config.mjs not found, copying..."
              cp workflows-repo/eslint.config.mjs ./
            fi

      - name: Run ESLint
        run: |
            export CI=true
            ${{ inputs.eslint-command }}
        
    # <------------------- Unit Test -------------------> 
  unit-test:
    name: Unit Test
    runs-on: ubuntu-22.04
    if: ${{ inputs.unit-test-enable }}
    steps:
      # Check out the calling repository
      - name: Checkout Source
        uses: actions/checkout@v4

        # Checkout the workflows repo to access `babel.config.js`
      - name: Checkout Workflows Repo
        uses: actions/checkout@v4
        with:
        # Checkout the `eslint` branch
          repository: Ridvan-bot/workflows
          ref: ${{ inputs.branch }}
          path: workflows-repo
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Dependencies
        run: |
          # Install dependencies
          npm install
          if ! grep -q '"@babel/core"' package.json; then
            npm install @babel/core --save-dev
          fi
          if ! grep -q '"@babel/preset-env"' package.json; then
            npm install @babel/preset-env --save-dev
          fi
          if ! grep -q '"@babel/preset-typescript"' package.json; then
            npm install @babel/preset-typescript --save-dev
          fi
          if ! grep -q '"@babel/preset-react"' package.json; then
            npm install @babel/preset-react --save-dev
          fi
          if ! grep -q '"@babel/preset-flow"' package.json; then
            npm install @babel/preset-flow --save-dev
          fi
          if ! grep -q '"@babel/plugin-transform-runtime"' package.json; then
            npm install @babel/plugin-transform-runtime --save-dev
          fi
          if ! grep -q '"@babel/runtime"' package.json; then
            npm install @babel/runtime --save-dev
          fi
          if ! grep -q '"jest-environment-jsdom"' package.json; then
            npm install jest-environment-jsdom --save-dev
          fi
          if ! grep -q '"jest-transform-stub"' package.json; then
            npm install jest-transform-stub --save-dev
          fi
          
      - name: Verify Files and Directories
        run: |
            if [ ! -f babel.config.js ]; then
              echo "babel.config.js not found, copying..."
              cp workflows-repo/babel.config.js ./
            fi
            if [ ! -f jest.config.js ]; then
              echo "jest.config.js not found, copying..."
              cp workflows-repo/jest.config.js ./
            fi
            if [ ! -d __mocks__ ]; then
              echo "__mocks__ directory not found, copying..."
              cp -r workflows-repo/__mocks__ ./
            fi
      - name: Run Unit Tests
        run: |
          ${{ inputs.unit-test-command }}