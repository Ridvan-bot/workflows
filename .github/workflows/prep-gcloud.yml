name: Prep Google Cloud With Required Services

# Trigger this workflow manually with inputs for branch and project name
on:
  workflow_dispatch:
    inputs:
      project_name:
        description: 'Google Cloud Project name (e.g., dev-my-project or main-my-project)'
        required: true
        default: 'dev-my-project'
      customer_name:
        description: 'Select the customer'
        required: true
        type: choice
        options:
          - pohlmanprotean
          - hosandrej
      branch:
        description: 'Select branch (e.g., dev or main)'
        required: true
        type: choice
        options:  
          - dev
          - main
jobs:
  setup-project:
    runs-on: ubuntu-22.04
    timeout-minutes: 17

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract Branch Name
        id: branch_name
        run: echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Set up environment variables for dynamic secret
        id: set-secret-name
        run: |
          # Convert branch and customer_name to uppercase
          UPPERCASE_BRANCH=$(echo "${{ github.event.inputs.branch }}" | tr '[:lower:]' '[:upper:]')
          UPPERCASE_CUSTOMER=$(echo "${{ github.event.inputs.customer_name }}" | tr '[:lower:]' '[:upper:]')
          SECRET_NAME="${UPPERCASE_BRANCH}_GCP_${UPPERCASE_CUSTOMER}_SA_KEY"
          echo "SECRET_NAME=${SECRET_NAME}" >> $GITHUB_ENV
          echo "::set-output name=secret_name::${SECRET_NAME}"
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets[steps.set-secret-name.outputs.secret_name] }}
          access_token_scopes: https://www.googleapis.com/auth/cloud-platform

      - name: Configure gcloud CLI
        run: |
          gcloud config set project ${{ github.event.inputs.project_name }}
          gcloud config set run/region europe-west1

      - name: Enable Google APIs
        run: |
          gcloud services enable containerregistry.googleapis.com
          gcloud services enable cloudbuild.googleapis.com
          gcloud services enable artifactregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud services enable secretmanager.googleapis.com

      - name: Create Artifact Registry repository
        run: |
          gcloud artifacts repositories create eu.gcr.io \
            --repository-format=docker \
            --location=europe \
            --description="Docker repository"
